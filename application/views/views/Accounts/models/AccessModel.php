<?phpclass AccessModel extends CI_Model{    public function __construct()    {        parent::__construct();    }    public function getCreatedBy($id)    {        $this->db->select('UserName');        $this->db->where('id', $id);        return $this->db->get('users')->result();    }    public function getuser()    {        $this->db->where('Locked', "1");        return $this->db->get('users')->result();    }    public function getfeature($module)    {        $this->db->where('ModuleType',$module);        return $this->db->get('features')->result();    }    public function get_featureid($id)    {        $this->db->select('FeatureType');        $this->db->where('FeatureID', $id);        return $this->db->get('features')->result();    }    public function get_data($code)    {        $this->db->where('LevelCode',$code);        return $this->db->get('company_structure')->result();    }    public function save_data()    {        $createdOn = date('Y-m-d H:i:s');        $access = $_POST['access'];        $add = $_POST['add'];        $edit = $_POST['edit'];        $delete = $_POST['delete'];        $view = $_POST['view'];        $print = $_POST['print'];        $username = $_POST['UserID'];        $Levelid = $_POST['LevelID'];        $feature = $_POST['FeatureID'];        if($this->session->userdata('in_use')){            $createdBy = $_SESSION['user'][0]->id;        }        if ($add == 1 || $view == 1){            $access = 1;        }        $rights = $access.$add.$edit.$delete.$view.$print;        // check parent        $this->db->select('LevelCode');        $this->db->where('id',$_POST['LevelID']);        $IsParent = $this->db->get('company_structure')->result();            // checking childs        $this->db->select('id');        $this->db->where('ParentCode',$IsParent[0]->LevelCode);        $HasChilds = $this->db->get('company_structure')->result();        if ($HasChilds == array()){            $array = array('LevelID' => $Levelid, 'UserID' => $username, 'FeatureID' => $feature );            $this->db->where($array);            $match = $this->db->get('access_rights');            if ($match->num_rows() > 0) {                $result[] = 11;  // link mojod hain            }else{                if($rights != '000000'){                    $data = array('LevelID' => $Levelid, 'UserID' => $username, 'FeatureID' => $feature, 'Rights' => $rights, 'CreatedOn'=>$createdOn, 'CreatedBy' => $createdBy);                    $this->db->insert('access_rights', $data);                    if($this->db->affected_rows() > 0){                        $result[] = true;                    }else{                        $result[] = false;                    }                }else{                    $result[] = '12'; // enter rights plz                }            }        }else{            foreach ($HasChilds as $hasChild) {                $this->db->select('id');                $this->db->where('id',$hasChild->id);                $compIds = $this->db->get('company_structure')->result();                $this->db->select('id');                $this->db->where('LevelID',$compIds[0]->id);                $this->db->where('FeatureID',$feature);                $this->db->where('UserID',$username);                $rights_exist[] = $this->db->get('access_rights')->result();            }            foreach ($rights_exist as $key => $right){                if ($right == array()){                    if ($rights != '000000'){                        $data = array('LevelID' => $HasChilds[$key]->id, 'UserID' => $username, 'FeatureID' => $feature, 'Rights' => $rights, 'CreatedOn' => $createdOn, 'CreatedBy' => $createdBy);                        $this->db->insert('access_rights', $data);                        if($this->db->affected_rows() > 0){                            $result[$key] = true;                        }else{                            $result[$key] = false;                        }                    }else{                        $result[$key] = '12';  // enter rights plz                    }                }else{                    $result[$key] = 11; // link mojod hain                }            }        }return $result;    }    public function Save_Data_for_Store()    {        $createdOn = date('Y-m-d H:i:s');        $createdBy = $_SESSION['user'][0]->id;        $access = $_POST['access'];        $add = $_POST['add'];        $edit = $_POST['edit'];        $delete = $_POST['delete'];        $view = $_POST['view'];        $print = $_POST['print'];        $username = $this->input->post('UserID');        $feature = $this->input->post('FeatureID');        if ($add == 1 || $view == 1){            $access = 1;        }        $rights = $access.$add.$edit.$delete.$view.$print;        $array = array('UserID' => $username, 'FeatureID' => $feature );        $this->db->where($array);        $match = $this->db->get('access_rights')->result();        if ($match != array()) {            return 11;  // link mojod hain        }else{            $data = array('LevelID' => 0, 'UserID' => $username, 'FeatureID' => $feature, 'Rights' => $rights, 'CreatedOn'=>$createdOn, 'CreatedBy' => $createdBy);            $this->db->insert('access_rights', $data);            if($this->db->affected_rows() > 0){                return true;            }else{                return false;            }        }    }    public function getdata($module)    {        $this->db->select('access_rights.id,access_rights.Rights,company_structure.LevelName,users.UserName,features.FeatureName,access_rights.CreatedBy');        $this->db->from('access_rights');        $this->db->join('company_structure', 'company_structure.id = access_rights.LevelID','LEFT');        $this->db->join('users', 'users.id = access_rights.UserID');        $this->db->join('features', 'features.FeatureID = access_rights.FeatureID');        $this->db->where('`features`.`ModuleType`',$module);        return $this->db->get()->result();    }    public function delete_data($id)    {        $this->db->where('id',$id);        $this->db->delete('access_rights');        if($this->db->affected_rows() > 0){            return true;        }        else{            return false;        }    }    public function delete_access($uid)    {        $this->db->where('UserID',$uid);        $this->db->delete('access_rights');        if($this->db->affected_rows() > 0){            return true;        }        else{            return false;        }    }    public function check_access($userId,$featureId,$levelId='',$module='')    {        $this->db->select('access_rights.Rights,access_rights.LevelID');        $this->db->join('features','access_rights.FeatureID = features.FeatureID');        $this->db->where('access_rights.UserID',$userId);        $this->db->where('access_rights.FeatureID',$featureId);        if ($module != ''){            $this->db->where('features.ModuleType',$module);        }        if ($levelId != ''){            $this->db->where('access_rights.LevelID',$levelId);        }        $rights = $this->db->get('access_rights')->result();        return $rights;    }    public function Check_Module_Access($userId,$module)    {        $this->db->select();        $this->db->from('access_rights');        $this->db->join('features','access_rights.FeatureID = features.FeatureID');        $this->db->where('access_rights.UserID',$userId);        $this->db->where('features.ModuleType',$module);        return $this->db->get()->result();    }}