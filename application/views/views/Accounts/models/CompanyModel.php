<?phpclass CompanyModel extends CI_Model{    public function __construct()    {        parent::__construct();    }    public function save_data()    {        $parentCode = $_POST['parentcode'];        $levelCode = $_POST['levelcode'];        $name = htmlentities($_POST['levelname']);        $createdOn = date('Y-m-d H:i:s');        $createdBy = $_SESSION['user'][0]->id;        //$name = $_POST['levelname'];        if($parentCode == '0'){            $data = array('ParentCode' => $parentCode, 'LevelCode' => $levelCode, 'LevelName' => $name ,'CreatedBy' => $createdBy, 'CreatedOn' => $createdOn);            $this->db->insert('company_structure', $data);            if($this->db->affected_rows()>0)            {                return true;            }else{                return false;            }        }else{            $newLevelCode = $parentCode.''.$levelCode;            $data = array('ParentCode' => $parentCode, 'LevelCode' => $newLevelCode, 'LevelName' => $name ,'CreatedBy' => $createdBy, 'CreatedOn' => $createdOn);            $this->db->insert('company_structure', $data);            if($this->db->affected_rows()>0)            {                return true;            }else{                return false;            }        }    }    public function GetLevels() /*for Income Report*/    {        $this->db->select('id,ParentCode,LevelCode,LevelName');        $this->db->where('ParentCode', 1);        $data = $this->db->get('company_structure')->result();        foreach ($data as $value) {            $this->db->where('ParentCode', $value->ParentCode);            $result = $this->db->get('company_structure')->result();            foreach ($result as $key =>  $level) {                $this->db->where('ParentCode', $level->LevelCode);                $result1[$key] = $this->db->get('company_structure')->result();            }        }        return $result1;    }    public function get_company_name($id)    {        $this->db->select('id,LevelName,ParentCode,LevelCode');        $this->db->where_in('id', $id);        return $this->db->get('company_structure')->result();    }    public function getSubHeadCon($id)/*for consolidated ladger only*/    {        $this->db->select('*,a.id as Id');        $this->db->join('company_structure b','a.ParentCode = b.LevelCode');        $this->db->where('b.id',$id);        return $this->db->get('company_structure a')->result();    }     public function get_s_data($id)    {        $this->db->where('LevelCode',$id);        return $this->db->get('company_structure')->result();    }    public function getHead()    {        $this->db->where('ParentCode', '0');        return $this->db->get('company_structure')->result();    }    public function getSubHead($id)    {        $this->db->where('ParentCode',$id);        return $this->db->get('company_structure')->result();    }    public function getSubHeadAccess($id)    {        if ($_SESSION['user'][0]->IsAdmin == 1){            $this->db->select('*');            $this->db->from('company_structure');            $this->db->where('ParentCode', $id);        }else{            $this->db->select('*');            $this->db->from('access_rights');            $this->db->join('company_structure', 'company_structure.id = access_rights.LevelID');            $this->db->where('company_structure.ParentCode', $id);            $this->db->group_by('access_rights.LevelID');        }        return $this->db->get()->result();    }    public function get_data($id='')    {        if (isset($id)){            $this->db->select('LevelCode');            $this->db->where('id',$id);        }        return $this->db->get('company_structure')->result();    }    public function checkSub($id)    {        $this->db->where('ParentCode',$id);        return $this->db->get('company_structure')->result();    }    public function checksSub($id)    {        $this->db->where('ParentCode', $id);        return $this->db->get('company_structure')->result();    }    public function get_Edit_Account($id)    {        $cid = "";        $is_allowed_new = "";        $this->db->where('LevelCode', $id);        $data = $this->db->get('company_structure')->result();        $cid = $data[0]->id;        $this->db->where('LevelId', $cid);        $ch_account = $this->db->get('chart_of_account');        if($ch_account->num_rows() > 0){            $is_allowed_new = false;        }        if($data[0]->ParentCode == 0){            if($is_allowed_new == false){                $account = array('parentName' => "", 'LevelData' => $data, 'is_allowed_new' => $is_allowed_new );                return $account;            }else{                $account = array('parentName' => "", 'LevelData' => $data);                return $account;            }        }else{            if($is_allowed_new == false){                $parentname = $this->get_parent_Name($data[0]->ParentCode);                $account = array('parentName' => $parentname, 'LevelData' => $data, 'is_allowed_new' => $is_allowed_new );                return $account;            }else{                $parentname = $this->get_parent_Name($data[0]->ParentCode);                $account = array('parentName' => $parentname, 'LevelData' => $data);                return $account;            }        }    }    public function get_parent_Name($id)    {        $this->db->where('LevelCode', $id);        $parentData = $this->db->get('company_structure')->result();        if (isset($parentData[0])){            return $parentData[0]->LevelName;        }else{            return null;        }    }    public function new_Account($id)    {        $this->db->where('LevelCode', $id);        $data = $this->db->get('company_structure')->result();        $parent_code = $data[0]->LevelCode;        $parent_id = $data[0]->LevelCode;        $parent_name = $data[0]->LevelName;        $this->db->where('ParentCode', $parent_code);        $parentData = $this->db->get('company_structure');        if($parentData->num_rows() > 0){            $ParentsData = $parentData->result();            $maxtoSearch = $ParentsData[0]->ParentCode;            $max_id = $this->get_max($maxtoSearch);            $level_id =  ++$max_id[0]->LevelCode;            $newAccount = array('parentID' => $parent_id, 'parentNAME' => $parent_name, 'new_ID' => $level_id );            return $newAccount;        }else{            $level_id = $parent_code.'01';            $newAccount = array('parentID' => $parent_id, 'parentNAME' => $parent_name, 'new_ID' => $level_id );            return $newAccount;        }    }    public function get_max($id)    {        $this->db->where('ParentCode', $id);        $this->db->select_max('LevelCode');        return $this->db->get('company_structure')->result();    }    public function save_new_account()    {        $NewparentCode = $_POST['ParentCode'];        $NewlevelCode = $_POST['LevelCode'];        //$Newname = htmlentities($_POST['LevelName']);        $createdOn = date('Y-m-d H:i:s');        $createdBy = $_SESSION['user'][0]->id;        $Newname = $_POST['LevelName'];        if(isset($_POST['isSerialize'])){            $isSerialize = $_POST['isSerialize'];        }        if($NewparentCode == 1){            $data = array('ParentCode' => $NewparentCode, 'LevelCode' => $NewlevelCode, 'LevelName' => $Newname,'CreatedBy' => $createdBy, 'CreatedOn' => $createdOn);            $this->db->insert('company_structure', $data);            if($this->db->affected_rows() > 0){                return true;            }else{                return false;            }        }else{            $par_isSer = $this->checkSerialize($NewparentCode);            if($par_isSer[0]->IsSerealized == 1){                $data = array('ParentCode' => $NewparentCode, 'LevelCode' => $NewlevelCode, 'LevelName' => $Newname, 'IsSerealized' => 1 ,'CreatedBy' => $createdBy, 'CreatedOn' => $createdOn);            }else{                $data = array('ParentCode' => $NewparentCode, 'LevelCode' => $NewlevelCode, 'LevelName' => $Newname, 'IsSerealized' => 0 ,'CreatedBy' => $createdBy, 'CreatedOn' => $createdOn);            }            $this->db->insert('company_structure', $data);            if($this->db->affected_rows() > 0){                return true;            }else{                return false;            }        }    }    public function checkSerialize($id)    {        $this->db->select('IsSerealized');        $this->db->where('LevelCode', $id);        return $this->db->get('company_structure')->result();    }    public function edit_account($id)    {           $updatedOn = date('Y-m-d H:i:s');        $updatedBy = $_SESSION['user'][0]->id;        $this->db->set('UpdatedBy', $updatedBy);        $this->db->set('UpdatedOn', $updatedOn);        $this->db->where('LevelCode', $id);        $this->db->update('company_structure', $_POST);        if($this->db->affected_rows() > 0){            return true;        }else{            return false;        }    }    public function delete_account($id)    {        $cid = "";        $this->db->where('ParentCode', $id);        $childs = $this->db->get('company_structure');        if($childs->num_rows() > 0){            return false;        }else{            $this->db->select('id');            $this->db->where('LevelCode', $id);            $data = $this->db->get('company_structure')->result();            $cid = $data[0]->id;            $this->db->where('LevelId', $cid);            $ch_account = $this->db->get('chart_of_account');            if($ch_account->num_rows() > 0){                return 203;            }else{                $this->db->where('LevelCode', $id);                $this->db->delete('company_structure');                if($this->db->affected_rows() > 0){                    return true;                }            }        }    }    public function checksSubl5($id)    {        $this->db->where('ParentCode', $id);        return $this->db->get('company_structure')->result();    }    public function checksSubl6($id)    {        $this->db->where('ParentCode', $id);        return $this->db->get('company_structure')->result();    }    public function checksSubl7($id)    {        $this->db->where('ParentCode', $id);        return $this->db->get('company_structure')->result();    }    public function checksSubl8($id)    {        $this->db->where('ParentCode', $id);        return $this->db->get('company_structure')->result();    }    public function get_parent($id)    {        $this->db->select('id,ParentCode,LevelCode');        $this->db->where('id', $id);        $data = $this->db->get('company_structure')->result();        $this->db->where('levelCode', $data[0]->ParentCode);        return $this->db->get('company_structure')->result();    }    public function getDepartments()    {        $this->db->select('Id,ParentCode,LevelCode,LevelName');        $this->db->where('ParentCode',102);        return $this->db->get('company_structure')->result();    }    public function getCompanies()    {        $this->db->select('id,LevelName,ParentCode');        $this->db->where('LENGTH(ParentCode)',3);        return $this->db->get('company_structure')->result();    }}