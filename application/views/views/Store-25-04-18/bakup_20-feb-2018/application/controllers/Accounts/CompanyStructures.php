<?php/** * Created by PhpStorm. * User: HP * Date: 12/23/2016 * Time: 10:35 AM */class CompanyStructures extends MY_Controller{    public function __construct()    {        parent::__construct();        if(!($this->session->userdata('in_use'))){            redirect('login','refresh');        }        $this->load->model('CompanyModel');    }    public function index()    {        $data['head'] = $this->CompanyModel->getHead();        $data['companydata'] = $this->CompanyModel->get_data();        $this->load->view('Accounts/header');        $this->load->view('Accounts/company/index',$data);        $this->load->view('Accounts/footer');        $this->load->view('Accounts/js/companyJs');    }    public function save()    {        $levelName_Length = strlen($_POST['levelname']);        if( $levelName_Length > 100 )        {            echo "<script>alert('Level Name Should Be Less Then 50 charectors');</script>";            header("Refresh:0.5;url=".site_url('Accounts/CompanyStructures'));        }        else {            $check = $this->CompanyModel->save_data();            if ($check) {                redirect(site_url('Accounts/CompanyStructures'));            }        }    }    public function getEditAccount($id)    {        $data = $this->CompanyModel->get_Edit_Account($id);        if(isset($data['is_allowed_new'])){                $account = array('parent_code' => $data['LevelData'][0]->ParentCode,                'level_code' => $data['LevelData'][0]->LevelCode,                'level_name' => $data['LevelData'][0]->LevelName,                'parent_name' => $data['parentName'],                'new_allowed' => $data['is_allowed_new']                // 'isSerialize' => $data['LevelData'][0]->IsSerealized            );        }else{                $account = array('parent_code' => $data['LevelData'][0]->ParentCode,                'level_code' => $data['LevelData'][0]->LevelCode,                'level_name' => $data['LevelData'][0]->LevelName,                'parent_name' => $data['parentName']                // 'isSerialize' => $data['LevelData'][0]->IsSerealized            );        }        echo json_encode($account);    }    public function newAccount($id)    {        $data = $this->CompanyModel->new_Account($id);        $newAccount = array('parent_ID' => $data['parentID'],            'parent_Name' => $data['parentNAME'],            'new_ID' => $data['new_ID'] );        echo json_encode($newAccount);    }    public function checkParent()    {        $this->db->where('ParentCode', 0);        $check = $this->db->get('company_structure');        if($check->num_rows() > 0){            $response = array('success' => "ok");        }else{            $response = array('error' => "ok");        }        echo json_encode($response);    }    public function SaveNewAccount()    {        $check = $this->CompanyModel->save_new_account();        if($check){            $response = array('success' => "ok");        }else{            $response = array('error' => "ok");        }        echo json_encode($response);    }    public function EditAccount($id)    {        $check = $this->CompanyModel->edit_account($id);        if($check){            $response = array('success' => "ok");        }else{            $response = array('error' => "ok");        }        echo json_encode($response);    }    public function DeleteAccount($id)    {        $check = $this->CompanyModel->delete_account($id);        if($check == "true"){            $response = array('success' => "ok");        }elseif($check === 203){            $response = array('link' => "ok");        }else{            $response = array('error' => "ok" ,'message' => "لیول حذف نہیں کیا جاسکتا اس کے تابع لیول موجود ہیں");        }        echo json_encode($response);    }    public function getParent($id)    {        $head = $this->CompanyModel->get_parent($id);        $parent = array('head_id' => $head[0]->id,                        'head_name' => $head[0]->LevelName,                        'level_code' => $head[0]->LevelCode );        echo json_encode($parent);    }    public function GetParentCode($id)    {       $check = $this->CompanyModel->get_company_name($id);       echo json_encode($check);    }}